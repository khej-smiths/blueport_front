name: Deployment

on:
  push:
    tags:
      - "v*.*.*"
    paths:
      - "Dockerfile"
      - "**/*.js"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.json"
      - "**/*.yml"
      - "**/*.yaml"
      - "**/*.env"
      - "**/app/**"
      - "**/public/**"
      - "**/tests/**"
      - "schema.graphql"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/blueport_front:latest

      - name: AWS Lightsail 서버에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # docker가 없으면 설치
            if ! command -v docker &> /dev/null
            then
              echo "Docker가 설치되어 있지 않아 설치를 진행합니다."
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # 이후 기존 배포 스크립트 (모든 docker 명령어에 sudo 추가)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/blueport_front:latest
            if [ $(sudo docker ps -q -f name=blueport_front) ]; then
              sudo docker stop blueport_front
              sudo docker rm blueport_front
            fi
            sudo docker run -d --name blueport_front -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/blueport_front:latest
